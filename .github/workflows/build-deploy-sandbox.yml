name: Build and Deploy to Sandbox Environment

# Branches that will trigger ci/cd pipeline
on:
  push:
    branches: 
    - qa
    - uat
    - dev

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to build and delpoy'
        type: choice
        required: true
        options:
          - dev
          - qa
          - uat
          - prod
# 2 jobs called build, deploy for application deployment running sequential

jobs:
  build:
    # type of machine that will run ci/cd pipeline script (azure VM provisoned by github)
    runs-on: ubuntu-latest
    # steps for fetching application code and build it
    steps:
      # Checkout application code
      - name: Checkout this repo
        uses: actions/checkout@v4

      # Cache application dependencies with hash value for faster upcoming builds
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      
      # Setting environment variables based on current environment branch
      - name: Setting enviroment variables
        run: |
          echo "USERNAME=$(echo ${{ secrets.ANYPOINT_PLATFORM_USERNAME }} )" >> $GITHUB_ENV
          echo "PASSWORD=$(echo ${{ secrets.ANYPOINT_PLATFORM_PASSWORD }} )" >> $GITHUB_ENV
          
          if [[ $GITHUB_REF_NAME == 'dev' ]]
          then
            echo "dev branch"
            echo "GITHUB_ENVIRONMENT=$(echo $GITHUB_REF_NAME )" >> $GITHUB_ENV
            echo "RUNTIME_ENVIRONMENT=$(echo "LLS-DEV" )" >> $GITHUB_ENV
 
          elif [[ $GITHUB_REF_NAME == 'qa' ]]
          then

            echo "qa branch"
            echo "GITHUB_ENVIRONMENT=$(echo $GITHUB_REF_NAME )" >> $GITHUB_ENV
            echo "RUNTIME_ENVIRONMENT=$(echo "LLS-QA-UAT" )" >> $GITHUB_ENV

          elif [[ $GITHUB_REF_NAME == 'uat' ]]
          then

            echo "uat branch"
            echo "GITHUB_ENVIRONMENT=$(echo $GITHUB_REF_NAME )" >> $GITHUB_ENV
            echo "RUNTIME_ENVIRONMENT=$(echo "LLS-QA-UAT" )" >> $GITHUB_ENV

          else
            echo "other branch"
          fi
      # Setup specific version for java framework
      - name: Setup Java JDK 1.8
        uses: actions/setup-java@v4
        with:
          java-version: 8
          distribution: temurin
      # Setting up Maven environment for use in GitHub Actions with specfic credentials
      - name: maven settings.xml
        uses: s4u/maven-settings-action@v3.0.0
        with:
          servers:  |
            [{
              "id": "MuleRepository", 
              "username": "${{ env.USERNAME }}", 
              "password": "${{ env.PASSWORD }}"
            }]

      # Build application code with maven 
      - name: Build with Maven
        run: mvn clean package

      # Mark generated build with current commit sha and environment name
      - name: Stamp artifact
        run: |
          artifactName1=$(ls target/*.jar | head -1)
          commitHash=$(git rev-parse --short "$GITHUB_SHA")
          artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/-$GITHUB_ENVIRONMENT-$commitHash.jar/g")
          mv $artifactName1 $artifactName2   
                      

      # Upload artifact to github storage under workflow run
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.3.1
        with:
          path: target/*.jar
          
  deploy:
    # Needs make the jobs run squential
    needs: build    
    # Type of machine that will run the pipeline
    runs-on: ubuntu-latest
    steps:

      # Checkout application code
      - name: Checkout this repo
        uses: actions/checkout@v4
      # Cache application dependencies with hash value for faster upcoming builds   
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      
      # Setting environment variables based on current environment branch
      - name: Setting enviroment variables
        run: |
          echo "USERNAME=$(echo ${{ secrets.ANYPOINT_PLATFORM_USERNAME }} )" >> $GITHUB_ENV
          echo "PASSWORD=$(echo ${{ secrets.ANYPOINT_PLATFORM_PASSWORD }} )" >> $GITHUB_ENV
          
          if [[ $GITHUB_REF_NAME == 'dev' ]]
          then
            echo "dev branch"
            echo "GITHUB_ENVIRONMENT=$(echo $GITHUB_REF_NAME )" >> $GITHUB_ENV
            echo "RUNTIME_ENVIRONMENT=$(echo "Sandbox" )" >> $GITHUB_ENV
            echo "KEY=$(echo ${{ secrets.ANYPOINT_PLATFORM_KEY_DEV }} )" >> $GITHUB_ENV

          elif [[ $GITHUB_REF_NAME == 'qa' ]]
          then

            echo "qa branch"
            echo "GITHUB_ENVIRONMENT=$(echo $GITHUB_REF_NAME )" >> $GITHUB_ENV
            echo "RUNTIME_ENVIRONMENT=$(echo "Sandbox" )" >> $GITHUB_ENV
            echo "KEY=$(echo ${{ secrets.ANYPOINT_PLATFORM_KEY_QA }} )" >> $GITHUB_ENV

          elif [[ $GITHUB_REF_NAME == 'uat' ]]
          then

            echo "uat branch"
            echo "GITHUB_ENVIRONMENT=$(echo $GITHUB_REF_NAME )" >> $GITHUB_ENV
            echo "RUNTIME_ENVIRONMENT=$(echo "Sandbox" )" >> $GITHUB_ENV
            echo "KEY=$(echo ${{ secrets.ANYPOINT_PLATFORM_KEY_UAT }} )" >> $GITHUB_ENV

          else
            echo "other branch"
          fi

      # Setting up Maven environment for use in GitHub Actions with specfic credentials
      - name: maven settings.xml
        uses: s4u/maven-settings-action@v3.0.0
        with:
          servers:  |
            [{
              "id": "MuleRepository", 
              "username": "${{ env.USERNAME }}", 
              "password": "${{ env.PASSWORD }}"
            }]

      # Download artifact to deploy it to cloudhub
      - name: Download a Build Artifact
        uses: actions/download-artifact@v4.1.4
        with:
          path: target/*.jar

      # Deploy the generated build to anypoint cloudhub
      - name: Deploy to RunTime Manager
        env: 
          server: MuleRepository
          runtimeEnv: ${{ env.GITHUB_ENVIRONMENT }}
          appRuntime: 4.4.0
          cloudhubApplicationName: multiple-webservice-wsdl-papi-${{ env.GITHUB_ENVIRONMENT }}
          environment: ${{ env.RUNTIME_ENVIRONMENT }}
          region: Cloudhub-US-East-2 
          workers: 1
          workerType: 0.1
          key: ${{ env.KEY}}
        run: |
          artifactName=$(ls *.jar | head -1)
          mvn deploy -DmuleDeploy \
            -Dmule.artifact=$artifactName \
            -Dserver=$server \
            -Ddecryption.key=$key \
            -Dbranch.name=$runtimeEnv \
            -DmuleVersion="$appRuntime" \
            -DappName="$cloudhubApplicationName" \
            -Denvironment="$environment" \
            -DtargetName="$region" \
            -Dreplicas="$workers" \
            -DreplicasType="$workerType"

